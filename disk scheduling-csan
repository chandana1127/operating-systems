#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>

sem_t mutex;

void* process1(void* arg) {
    while (1) {
        sem_wait(&mutex);
        printf("Process 1 is executing\n");
        sleep(1);
        sem_post(&mutex);
    }
    return NULL;
}

void* process2(void* arg) {
    while (1) {
        sem_wait(&mutex);
        printf("Process 2 is executing\n");
        sleep(1);
        sem_post(&mutex);
    }
    return NULL;
}

int main() {
    sem_init(&mutex, 0, 1);
    pthread_t p1, p2;
    pthread_create(&p1, NULL, process1, NULL);
    pthread_create(&p2, NULL, process2, NULL);
    pthread_join(p1, NULL);
    pthread_join(p2, NULL);
    sem_destroy(&mutex);
    return 0;
}
